<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        jgAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /9k=
</value>
  </data>
</root>